{"ast":null,"code":"import _toConsumableArray from \"/home/katie/Krishi/Programs/mortgage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/katie/Krishi/Programs/mortgage/src/Table.js\";\n\nimport React from 'react';\nexport default (function (_ref) {\n  var payments = _ref.payments,\n      className = _ref.className;\n  var output = payments.filter(function (year, i) {\n    return i > 0 && (year.balance > 0 || year.interestYearly > 0);\n  }).reduce(function (acc, year, index) {\n    return {\n      interestTotal: acc.interestTotal + year.interestYearly,\n      overpaymentTotal: acc.overpaymentTotal + year.overpayment,\n      rows: [].concat(_toConsumableArray(acc.rows), [[year.partial ? year.partial + 'm' : index + 1, Math.round(year.interestYearly || 0), Math.round(year.overpayment), Math.round(year.balance)]])\n    };\n  }, {\n    interestTotal: 0,\n    overpaymentTotal: 0,\n    rows: []\n  });\n  return div < /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Cashflow Graph\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Years\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Interest\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Overpayment\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Balance\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, output.rows.map(function (row, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, row.map(function (d, i) {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, d.toLocaleString());\n    }));\n  })), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, Math.round(output.interestTotal).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, Math.round(output.overpaymentTotal).toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))))));\n});","map":{"version":3,"sources":["/home/katie/Krishi/Programs/mortgage/src/Table.js"],"names":["React","payments","className","output","filter","year","i","balance","interestYearly","reduce","acc","index","interestTotal","overpaymentTotal","overpayment","rows","partial","Math","round","div","map","row","d","toLocaleString"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ payments, className }) => {\r\n  let output = payments\r\n    .filter((year, i) => i > 0 && (year.balance > 0 || year.interestYearly > 0))\r\n    .reduce(\r\n      (acc, year, index) => ({\r\n        interestTotal: acc.interestTotal + year.interestYearly,\r\n        overpaymentTotal: acc.overpaymentTotal + year.overpayment,\r\n        rows: [\r\n          ...acc.rows,\r\n          [\r\n            year.partial ? year.partial + 'm' : index + 1,\r\n            Math.round(year.interestYearly || 0),\r\n            Math.round(year.overpayment),\r\n            Math.round(year.balance)\r\n          ]\r\n        ]\r\n      }),\r\n      { interestTotal: 0, overpaymentTotal: 0, rows: [] }\r\n    );\r\n\r\n  return (\r\n    div<\r\n    <div className=\"panel panel-default\">\r\n      <div className=\"panel-heading\">Cashflow Graph</div>\r\n      <div className=\"panel-body\">\r\n      <table className={className}>\r\n      <thead>\r\n        <tr>\r\n          <th>Years</th>\r\n          <th>Interest</th>\r\n          <th>Overpayment</th>\r\n          <th>Balance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {output.rows.map((row, index) => (\r\n          <tr key={index}>\r\n            {row.map((d, i) => (\r\n              <td key={i}>{d.toLocaleString()}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td colSpan={2}>\r\n            {Math.round(output.interestTotal).toLocaleString()}\r\n          </td>\r\n          <td>{Math.round(output.overpaymentTotal).toLocaleString()}</td>\r\n          <td />\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n    \r\n      </div>\r\n    </div>  \r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}